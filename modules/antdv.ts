import { addComponent, defineNuxtModule } from '@nuxt/kit'
import { defu } from 'defu'

const AllComponents = [
  'Affix',
  'Alert',
  'Anchor',
  'AnchorLink',
  'AutoComplete',
  'AutoCompleteOptGroup',
  'AutoCompleteOption',
  'Avatar',
  'AvatarGroup',
  'BackTop',
  'Badge',
  'BadgeRibbon',
  'Breadcrumb',
  'BreadcrumbItem',
  'BreadcrumbSeparator',
  'Button',
  'ButtonGroup',
  'Calendar',
  'Card',
  'CardGrid',
  'CardMeta',
  'Carousel',
  'Cascader',
  'CheckableTag',
  'Checkbox',
  'CheckboxGroup',
  'Col',
  'Collapse',
  'CollapsePanel',
  'Comment',
  'ConfigProvider',
  'DatePicker',
  'Descriptions',
  'DescriptionsItem',
  'DirectoryTree',
  'Divider',
  'Drawer',
  'Dropdown',
  'DropdownButton',
  'Empty',
  'FloatButton',
  'FloatButtonGroup',
  'Form',
  'FormItem',
  'FormItemRest',
  'Grid',
  'Image',
  'ImagePreviewGroup',
  'Input',
  'InputGroup',
  'InputNumber',
  'InputPassword',
  'InputSearch',
  'Layout',
  'LayoutContent',
  'LayoutFooter',
  'LayoutHeader',
  'LayoutSider',
  'List',
  'ListItem',
  'ListItemMeta',
  'LocaleProvider',
  'Mentions',
  'MentionsOption',
  'Menu',
  'MenuDivider',
  'MenuItem',
  'MenuItemGroup',
  'Modal',
  'MonthPicker',
  'PageHeader',
  'Pagination',
  'Popconfirm',
  'Popover',
  'Progress',
  'QRCode',
  'QuarterPicker',
  'Radio',
  'RadioButton',
  'RadioGroup',
  'RangePicker',
  'Rate',
  'Result',
  'Row',
  'Segmented',
  'Select',
  'SelectOptGroup',
  'SelectOption',
  'Skeleton',
  'SkeletonAvatar',
  'SkeletonButton',
  'SkeletonImage',
  'SkeletonInput',
  'SkeletonTitle',
  'Slider',
  'Space',
  'Spin',
  'Statistic',
  'StatisticCountdown',
  'Step',
  'Steps',
  'SubMenu',
  'Switch',
  'TabPane',
  'Table',
  'TableColumn',
  'TableColumnGroup',
  'TableSummary',
  'TableSummaryCell',
  'TableSummaryRow',
  'Tabs',
  'Tag',
  'Textarea',
  'TimePicker',
  'TimeRangePicker',
  'Timeline',
  'TimelineItem',
  'Tooltip',
  'Transfer',
  'Tree',
  'TreeNode',
  'TreeSelect',
  'TreeSelectNode',
  'Typography',
  'TypographyLink',
  'TypographyParagraph',
  'TypographyText',
  'TypographyTitle',
  'Upload',
  'UploadDragger',
  'Watermark',
  'WeekPicker',
]

function resolveComponents() {
  for (const comp of AllComponents) {
    addComponent({
      export: comp,
      name: `A${comp}`,
      filePath: 'ant-design-vue',
    }).then(() => {
    })
  }
}

/**
 * Nuxt module to auto-import ant-design vue components
 */
export default defineNuxtModule({
  meta: {
    name: 'ant-design-vue',
    configKey: 'antdv',
  },
  // Default configuration options of the Nuxt module
  defaults: {
    icons: false,
  },
  setup(options, nuxt) {
    const transpiles = [
      ...nuxt.options.dev ? [] : ['@babel/runtime'],
      ...options.icons ? ['@ant-design/icons-vue'] : [],
      'ant-design-vue',
      'dayjs',
      'lodash-es',
    ]
    nuxt.options.build.transpile.push(...transpiles)
    if (nuxt.options.components !== false)
      resolveComponents()

    nuxt.hook('vite:extendConfig', (config) => {
      config.optimizeDeps = defu(config.optimizeDeps, {
        include: [
          'lodash-es',
          'dayjs',
          ...options.icons ? ['@ant-design/icons-vue'] : [],
        ],
      })
      config.ssr = defu(config.ssr, {
        noExternal: ['ant-design-vue'],
      })
    })
  },
})
